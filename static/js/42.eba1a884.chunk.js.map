{"version":3,"sources":["app/components/Logo.jsx","app/views/sessions/JwtLogin.jsx"],"names":["Component","_ref","maxWidth","LogoImg","styled","_jsx","Link","to","children","src","FlexBox","Box","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","position","background","JWTRoot","minHeight","margin","borderRadius","initialValues","email","password","remember","validationSchema","Yup","shape","min","required","JwtLogin","theme","useTheme","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","loading","setLoading","queryParams","URLSearchParams","window","location","search","authCode","get","login","useAuth","dispatch","useDispatch","handleFormSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","sent","t0","message","setApplicationMessage","text","stop","_x","apply","arguments","useEffect","_callee2","response","_context2","Parse","Cloud","run","otp","console","log","Card","className","_jsxs","Grid","container","item","sm","xs","p","sx","minWidth","Logo","Formik","onSubmit","_ref3","errors","touched","handleChange","handleBlur","handleSubmit","TextField","fullWidth","size","type","name","label","variant","onBlur","value","onChange","helperText","error","Boolean","mb","NavLink","style","color","palette","primary","main","LoadingButton","my","Paragraph","marginLeft"],"mappings":"iHAAA,4BAmBeA,IAbG,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SAEXC,EAAUC,YAAO,MAAPA,EAAc,iBAAO,CACjCF,SAAUA,GAAY,QACzB,IAED,OACIG,cAACC,IAAI,CAACC,GAAG,IAAGC,SACRH,cAACF,EAAO,CAACM,IAAI,0CAGzB,C,sOCFMC,EAAUN,YAAOO,IAAPP,EAAY,iBAAO,CAAEQ,QAAS,OAAQC,WAAY,SAAU,IAEtEC,EAAaV,YAAOM,EAAPN,EAAgB,iBAAO,CAAEW,eAAgB,SAAU,IAEhEC,EAAaZ,YAAOO,IAAPP,EAAY,iBAAO,CACpCa,OAAQ,OACRC,QAAS,OACTC,SAAU,WACVC,WAAY,sBACb,IAEKC,EAAUjB,YAAOU,EAAPV,EAAmB,iBAAO,CACxCgB,WAAY,UACZE,UAAW,kBACX,UAAW,CACTpB,SAAU,IACVoB,UAAW,IACXC,OAAQ,OACRX,QAAS,OACTY,aAAc,GACdX,WAAY,UAEf,IAGKY,EAAgB,CACpBC,MAAO,GACPC,SAAU,GACVC,UAAU,GAINC,EAAmBC,MAAaC,MAAM,CAC1CJ,SAAUG,MACPE,IAAI,EAAG,uCACPC,SAAS,yBACZP,MAAOI,MAAaJ,MAAM,yBAAyBO,SAAS,wBAqI/CC,UA9HE,WACf,IAAMC,EAAQC,cACRC,EAAWC,cACjBC,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GACpBI,EAAc,IAAIC,gBAAgBC,OAAOC,SAASC,QAClDC,EAAWL,EAAYM,IAAI,KAC3BzB,EAAQmB,EAAYM,IAAI,KACtBC,EAAUC,cAAVD,MACFE,EAAWC,cAEXC,EAAgB,eAAAvD,EAAAwD,YAAAC,cAAAC,MAAG,SAAAC,EAAOC,GAAM,OAAAH,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnB,OAAjBrB,GAAW,GAAMmB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEQb,EAAMS,EAAOnC,MAAOmC,EAAOlC,UAAU,KAAD,EAA7CoC,EAAAG,KACd7B,EAAS,KAAK0B,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAEdnB,GAAW,GACX,OAAAmB,EAAAI,SAAA,IAAAJ,EAAAI,IAAIJ,EAAAI,GAAGC,SACLd,EAASe,YAAsB,CAC7BC,KAAI,OAAAP,EAAAI,SAAA,IAAAJ,EAAAI,QAAA,EAAEJ,EAAAI,GAAGC,WAEZ,yBAAAL,EAAAQ,OAAA,GAAAX,EAAA,kBAEJ,gBAbqBY,GAAA,OAAAvE,EAAAwE,MAAA,KAAAC,UAAA,KAyBtB,OAVAC,oBAASlB,YAAAC,cAAAC,MAAC,SAAAiB,IAAA,IAAAC,EAAA,OAAAnB,cAAAI,MAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,WACJf,IAAYxB,EAAK,CAAAoD,EAAAb,KAAA,eAAAa,EAAAb,KAAA,EACIc,IAAMC,MAAMC,IAAI,qBAAsB,CAC3DvD,MAAOA,EACPwD,IAAKhC,IACL,OAHI2B,EAAQC,EAAAZ,KAIdiB,QAAQC,IAAIP,GAAS,wBAAAC,EAAAP,OAAA,GAAAK,EAAA,KAEtB,CAAC1B,GAAYxB,IAGdrB,cAACgB,EAAO,CAAAb,SACNH,cAACgF,IAAI,CAACC,UAAU,OAAM9E,SACpB+E,eAACC,IAAI,CAACC,WAAS,EAAAjF,SAAA,CACbH,cAACmF,IAAI,CAACE,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAGpF,SACvBH,cAACS,EAAU,CAAC+E,EAAG,EAAG5E,OAAO,OAAO6E,GAAI,CAAEC,SAAU,KAAMvF,SACpDH,cAAC2F,IAAI,QAIT3F,cAACmF,IAAI,CAACE,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAGpF,SACvBH,cAACW,EAAU,CAAAR,SACTH,cAAC4F,IAAM,CACLC,SAAU1C,EACV/B,cAAeA,EACfI,iBAAkBA,EAAiBrB,SAElC,SAAA2F,GAAA,IAAGtC,EAAMsC,EAANtC,OAAQuC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAASC,EAAYH,EAAZG,aAAcC,EAAUJ,EAAVI,WAAYC,EAAYL,EAAZK,aAAY,OACjEjB,eAAA,QAAMW,SAAUM,EAAahG,SAAA,CAC3BH,cAACoG,IAAS,CACRC,WAAS,EACTC,KAAK,QACLC,KAAK,QACLC,KAAK,QACLC,MAAM,QACNC,QAAQ,WACRC,OAAQT,EACRU,MAAOpD,EAAOnC,MACdwF,SAAUZ,EACVa,WAAYd,EAAQ3E,OAAS0E,EAAO1E,MACpC0F,MAAOC,QAAQjB,EAAO1E,OAAS2E,EAAQ3E,OACvCoE,GAAI,CAAEwB,GAAI,KAGZjH,cAACoG,IAAS,CACRC,WAAS,EACTC,KAAK,QACLE,KAAK,WACLD,KAAK,WACLE,MAAM,WACNC,QAAQ,WACRC,OAAQT,EACRU,MAAOpD,EAAOlC,SACduF,SAAUZ,EACVa,WAAYd,EAAQ1E,UAAYyE,EAAOzE,SACvCyF,MAAOC,QAAQjB,EAAOzE,UAAY0E,EAAQ1E,UAC1CmE,GAAI,CAAEwB,GAAI,OAGZjH,cAACK,EAAO,CAACK,eAAe,gBAAeP,SAGrCH,cAACkH,IAAO,CACNhH,GAAG,2BACHiH,MAAO,CAAEC,MAAOtF,EAAMuF,QAAQC,QAAQC,MAAOpH,SAAA,sBAMjDH,cAACwH,IAAa,CACZjB,KAAK,SACLa,MAAM,UACN9E,QAASA,EACToE,QAAQ,YACRjB,GAAI,CAAEgC,GAAI,GAAItH,SAAA,UAKd+E,eAACwC,IAAS,CAAAvH,SAAA,0BAERH,cAACkH,IAAO,CACNhH,GAAG,kBACHiH,MAAO,CAAEC,MAAOtF,EAAMuF,QAAQC,QAAQC,KAAMI,WAAY,GAAIxH,SAAA,kBAM7D,cASzB,C","file":"static/js/42.eba1a884.chunk.js","sourcesContent":["import { CircularProgress } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Link } from 'react-router-dom';\n\n\n\nconst Component = ({ maxWidth }) => {\n\n    const LogoImg = styled('img')(() => ({\n        maxWidth: maxWidth || '240px',\n    }));\n\n    return (\n        <Link to=\"/\">\n            <LogoImg src=\"/assets/images/FullLogo_NoBuffer.png\" />\n        </Link>\n    );\n};\n\nexport default Component;","import { LoadingButton } from '@mui/lab';\nimport { Card, Checkbox, Grid, TextField } from '@mui/material';\nimport { Box, styled, useTheme } from '@mui/system';\nimport { Paragraph } from 'app/components/Typography';\nimport useAuth from 'app/hooks/useAuth';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport Logo from 'app/components/Logo'\nimport Parse from 'app/vendor/Parse'\nimport { useEffect } from 'react';\nimport { setApplicationMessage } from 'app/redux/actions/ApplicationActions'\nimport { useDispatch } from 'react-redux';\n\nconst FlexBox = styled(Box)(() => ({ display: 'flex', alignItems: 'center' }));\n\nconst JustifyBox = styled(FlexBox)(() => ({ justifyContent: 'center' }));\n\nconst ContentBox = styled(Box)(() => ({\n  height: '100%',\n  padding: '32px',\n  position: 'relative',\n  background: 'rgba(0, 0, 0, 0.01)',\n}));\n\nconst JWTRoot = styled(JustifyBox)(() => ({\n  background: '#1A2038',\n  minHeight: '100% !important',\n  '& .card': {\n    maxWidth: 800,\n    minHeight: 400,\n    margin: '1rem',\n    display: 'flex',\n    borderRadius: 12,\n    alignItems: 'center',\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  email: '',\n  password: '',\n  remember: true,\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(6, 'Password must be 6 character length')\n    .required('Password is required!'),\n  email: Yup.string().email('Invalid Email address').required('Email is required!'),\n});\n\n\n\n\n\nconst JwtLogin = () => {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const queryParams = new URLSearchParams(window.location.search)\n  const authCode = queryParams.get(\"o\")\n  const email = queryParams.get(\"e\")\n  const { login } = useAuth();\n  const dispatch = useDispatch()\n\n  const handleFormSubmit = async (values) => {\n    setLoading(true);\n    try {\n      const response = await login(values.email, values.password);\n      navigate('/');\n    } catch (e) {\n      setLoading(false);\n      if (e?.message) {\n        dispatch(setApplicationMessage({\n          text: e?.message\n        }))\n      }\n    }\n  };\n\n  useEffect(async () => {\n    if (authCode && email) {\n      const response = await Parse.Cloud.run('verifyEmailAddress', {\n        email: email,\n        otp: authCode\n      })\n      console.log(response)\n    }\n  }, [authCode && email])\n\n  return (\n    <JWTRoot>\n      <Card className=\"card\">\n        <Grid container>\n          <Grid item sm={6} xs={12}>\n            <JustifyBox p={4} height=\"100%\" sx={{ minWidth: 320 }}>\n              <Logo />\n            </JustifyBox>\n          </Grid>\n\n          <Grid item sm={6} xs={12}>\n            <ContentBox>\n              <Formik\n                onSubmit={handleFormSubmit}\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n              >\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                  <form onSubmit={handleSubmit}>\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      type=\"email\"\n                      name=\"email\"\n                      label=\"Email\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.email}\n                      onChange={handleChange}\n                      helperText={touched.email && errors.email}\n                      error={Boolean(errors.email && touched.email)}\n                      sx={{ mb: 3 }}\n                    />\n\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      name=\"password\"\n                      type=\"password\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.password}\n                      onChange={handleChange}\n                      helperText={touched.password && errors.password}\n                      error={Boolean(errors.password && touched.password)}\n                      sx={{ mb: 1.5 }}\n                    />\n\n                    <FlexBox justifyContent=\"space-between\">\n\n\n                      <NavLink\n                        to=\"/session/forgot-password\"\n                        style={{ color: theme.palette.primary.main }}\n                      >\n                        Forget Password\n                      </NavLink>\n                    </FlexBox>\n\n                    <LoadingButton\n                      type=\"submit\"\n                      color=\"primary\"\n                      loading={loading}\n                      variant=\"contained\"\n                      sx={{ my: 2 }}\n                    >\n                      Login\n                    </LoadingButton>\n                    {\n                      <Paragraph>\n                        Don't have an account?\n                        <NavLink\n                          to=\"/session/signup\"\n                          style={{ color: theme.palette.primary.main, marginLeft: 5 }}\n                        >\n                          Register\n                        </NavLink>\n                      </Paragraph>\n                    }\n                  </form>\n                )}\n              </Formik>\n            </ContentBox>\n          </Grid>\n        </Grid>\n      </Card>\n    </JWTRoot>\n  );\n};\n\nexport default JwtLogin;\n"],"sourceRoot":""}