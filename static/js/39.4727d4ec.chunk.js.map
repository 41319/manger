{"version":3,"sources":["../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","app/components/Logo.jsx","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","app/views/sessions/JwtRegister.jsx"],"names":["getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","_ref","ownerState","_extends","padding","borderRadius","edge","marginLeft","size","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","className","defaultChecked","disabledProp","disabled","_props$disableFocusRi","disableFocusRipple","_props$edge","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutPropertiesLoose","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","classes","slots","root","concat","capitalize","input","composeClasses","useUtilityClasses","_jsxs","component","clsx","centerRipple","focusRipple","role","undefined","event","children","_jsx","nativeEvent","defaultPrevented","newChecked","target","Component","maxWidth","LogoImg","Link","to","src","createSvgIcon","d","getCheckboxUtilityClass","checkboxClasses","CheckboxRoot","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","indeterminate","color","_ref2","theme","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","primary","mainChannel","hoverOpacity","alpha","active","main","_defineProperty","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","inProps","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","_props$checkedIcon","_props$color","_props$icon","iconProp","_props$indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","composedClasses","fontSize","FlexBox","Box","display","alignItems","JustifyBox","justifyContent","ContentBox","background","JWTRegister","minHeight","initialValues","email","password","username","remember","mobile","validationSchema","Yup","shape","min","JwtRegister","dispatch","useDispatch","useTheme","register","useAuth","_useState","useNavigate","useState","_useState2","loading","setLoading","handleFormSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","response","wrap","_context","prev","next","sent","setApplicationMessage","message","console","log","t0","stop","_x","apply","arguments","Card","Grid","container","item","sm","xs","Logo","p","Formik","onSubmit","errors","touched","handleChange","handleBlur","handleSubmit","TextField","fullWidth","label","variant","helperText","error","sx","mb","gap","LoadingButton","mt","Paragraph","NavLink","style"],"mappings":"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","file":"static/js/39.4727d4ec.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import { CircularProgress } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Link } from 'react-router-dom';\n\n\n\nconst Component = ({ maxWidth }) => {\n\n    const LogoImg = styled('img')(() => ({\n        maxWidth: maxWidth || '240px',\n    }));\n\n    return (\n        <Link to=\"/\">\n            <LogoImg src=\"/assets/images/FullLogo_NoBuffer.png\" />\n        </Link>\n    );\n};\n\nexport default Component;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import { useTheme } from '@emotion/react';\nimport { LoadingButton } from '@mui/lab';\nimport { Card, Checkbox, Grid, TextField } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Paragraph } from 'app/components/Typography';\nimport useAuth from 'app/hooks/useAuth';\nimport { Formik } from 'formik';\nimport { useState } from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport Logo from 'app/components/Logo'\nimport { setApplicationMessage } from 'app/redux/actions/ApplicationActions'\nimport { useDispatch } from 'react-redux';\n\nconst FlexBox = styled(Box)(() => ({ display: 'flex', alignItems: 'center' }));\n\nconst JustifyBox = styled(FlexBox)(() => ({ justifyContent: 'center' }));\n\nconst ContentBox = styled(JustifyBox)(() => ({\n  height: '100%',\n  padding: '32px',\n  background: 'rgba(0, 0, 0, 0.01)',\n}));\n\nconst JWTRegister = styled(JustifyBox)(() => ({\n  background: '#1A2038',\n  minHeight: '100vh !important',\n  '& .card': {\n    maxWidth: 800,\n    minHeight: 400,\n    margin: '1rem',\n    display: 'flex',\n    borderRadius: 12,\n    alignItems: 'center',\n  },\n}));\n\n// inital login credentials\nconst initialValues = {\n  email: '',\n  password: '',\n  username: '',\n  remember: true,\n  mobile: '',\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(8, 'Password must be 6 character length')\n    .required('Password is required!'),\n  email: Yup.string().email('Invalid Email address').required('Email is required!'),\n  mobile: Yup.string().required('Mobile Number is required')\n});\n\nconst JwtRegister = () => {\n  const dispatch = useDispatch()\n  const theme = useTheme();\n  const { register } = useAuth();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n\n  const handleFormSubmit = async (values) => {\n    setLoading(true);\n\n    try {\n      const response = await register(values.email, values.username, values.password, values.mobile);\n      dispatch(setApplicationMessage({ text: response?.message }))\n      console.log(response)\n      //navigate('/');\n      setLoading(false);\n    } catch (e) {\n      dispatch(setApplicationMessage({ text: e?.message }))\n      setLoading(false);\n    }\n  };\n\n  return (\n    <JWTRegister>\n      <Card className=\"card\">\n        <Grid container>\n          <Grid item sm={6} xs={12}>\n            <ContentBox>\n              <Logo />\n            </ContentBox>\n          </Grid>\n\n          <Grid item sm={6} xs={12}>\n            <Box p={4} height=\"100%\">\n              <Formik\n                onSubmit={handleFormSubmit}\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n              >\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                  <form onSubmit={handleSubmit}>\n\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      type=\"email\"\n                      name=\"email\"\n                      label=\"Email\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.email}\n                      onChange={handleChange}\n                      helperText={touched.email && errors.email}\n                      error={Boolean(errors.email && touched.email)}\n                      sx={{ mb: 3 }}\n                    />\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      name=\"password\"\n                      type=\"password\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.password}\n                      onChange={handleChange}\n                      helperText={touched.password && errors.password}\n                      error={Boolean(errors.password && touched.password)}\n                      sx={{ mb: 2 }}\n                    />\n\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      type=\"mobile\"\n                      name=\"mobile\"\n                      label=\"Mobile Number\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.mobile}\n                      onChange={handleChange}\n                      helperText={touched.mobile && errors.mobile}\n                      error={Boolean(errors.mobile && touched.mobile)}\n                      sx={{ mb: 3 }}\n                    />\n\n                    <FlexBox gap={1} alignItems=\"center\">\n                      <Checkbox\n                        size=\"small\"\n                        name=\"remember\"\n                        onChange={handleChange}\n                        checked={values.remember}\n                        sx={{ padding: 0 }}\n                      />\n\n                      {\n                        \"\" && <Paragraph fontSize={13}>\n                          I have read and agree to the terms of service.\n                        </Paragraph>\n                      }\n                    </FlexBox>\n\n                    <LoadingButton\n                      type=\"submit\"\n                      color=\"primary\"\n                      loading={loading}\n                      variant=\"contained\"\n                      sx={{ mb: 2, mt: 3 }}\n                    >\n                      Create Account\n                    </LoadingButton>\n\n                    <Paragraph>\n                      Already have an account?\n                      <NavLink\n                        to=\"/session/signin\"\n                        style={{ color: theme.palette.primary.main, marginLeft: 5 }}\n                      >\n                        Login\n                      </NavLink>\n                    </Paragraph>\n                  </form>\n                )}\n              </Formik>\n            </Box>\n          </Grid>\n        </Grid>\n      </Card>\n    </JWTRegister>\n  );\n};\n\nexport default JwtRegister;\n"],"sourceRoot":""}