{"version":3,"sources":["app/views/material-kit/dialog/ConfirmationDialog.jsx","app/views/material-kit/dialog/CustomizedDialog.jsx","app/views/material-kit/dialog/DialogTransition.jsx","app/views/material-kit/dialog/FormDialog.jsx","app/views/material-kit/dialog/FullScreenDialog.jsx","app/views/material-kit/dialog/OptimalSizeDialog.jsx","app/views/material-kit/dialog/ResponsiveDialog.jsx","app/views/material-kit/dialog/SimpleAlerts.jsx","app/views/material-kit/dialog/SimpleDialog.jsx","app/views/material-kit/dialog/AppDialog.jsx"],"names":["options","ConfirmationDialogRaw","props","onClose","valueProp","value","open","other","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","setValue","radioGroupRef","useRef","useEffect","_jsxs","Dialog","_objectSpread","maxWidth","disableEscapeKeyDown","TransitionProps","onExiting","current","focus","children","_jsx","DialogTitle","id","DialogContent","dividers","RadioGroup","ref","name","onChange","_","newValue","map","option","FormControlLabel","control","Radio","label","DialogActions","Button","variant","color","onClick","DialogRoot","styled","_ref","width","backgroundColor","theme","palette","background","paper","maxHeight","ConfirmationDialog","_React$useState","React","_React$useState2","setOpen","_React$useState3","_React$useState4","List","component","role","ListItem","button","divider","disabled","ListItemText","primary","secondary","keepMounted","className","DialogTitleRoot","MuiDialogTitle","margin","padding","spacing","position","right","top","grey","disableTypography","Typography","IconButton","CloseIcon","MuiDialogContent","_ref2","MuiDialogActions","_ref3","CustomizedDialogs","handleClose","gutterBottom","Transition","forwardRef","Slide","direction","AlertDialogSlide","TransitionComponent","DialogContentText","FormDialog","Box","TextField","autoFocus","type","fullWidth","FullScreenDialog","useTheme","fullScreen","AppBar","sx","Toolbar","edge","H6","flex","marginLeft","Divider","display","flexDirection","marginTop","minWidth","MaxWidthDialog","setFullWidth","_React$useState5","_React$useState6","setMaxWidth","noValidate","FormControl","InputLabel","htmlFor","Select","event","target","inputProps","MenuItem","Switch","checked","ResponsiveDialog","useMediaQuery","breakpoints","down","AlertDialog","emails","SimpleDialog","selectedValue","handleListItemClick","email","ListItemAvatar","Avatar","blue","PersonIcon","AddIcon","SimpleDialogDemo","_useState3","_useState4","setSelectedValue","Container","_defineProperty","marginBottom","AppDialog","Breadcrumb","routeSegments","path","Stack","SimpleCard","title"],"mappings":"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","file":"static/js/47.9418d91e.chunk.js","sourcesContent":["import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport { styled } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst options = [\n  'None',\n  'Atria',\n  'Callisto',\n  'Dione',\n  'Ganymede',\n  'Hangouts Call',\n  'Luna',\n  'Oberon',\n  'Phobos',\n  'Pyxis',\n  'Sedna',\n  'Titania',\n  'Triton',\n  'Umbriel',\n];\n\nfunction ConfirmationDialogRaw(props) {\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = useState(valueProp);\n  const radioGroupRef = useRef(null);\n\n  useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  function handleEntering() {\n    if (radioGroupRef.current !== null) {\n      radioGroupRef.current.focus();\n    }\n  }\n\n  const handleCancel = () => onClose();\n  const handleOk = () => onClose(value);\n\n  const handleChange = (_, newValue) => setValue(newValue);\n\n  return (\n    <Dialog\n      maxWidth=\"xs\"\n      disableEscapeKeyDown\n      TransitionProps={{ onExiting: handleEntering }}\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\n      <DialogContent dividers>\n        <RadioGroup\n          ref={radioGroupRef}\n          aria-label=\"Ringtone\"\n          name=\"ringtone\"\n          value={value}\n          onChange={handleChange}\n        >\n          {options.map((option) => (\n            <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\n          ))}\n        </RadioGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancel}>\n          Cancel\n        </Button>\n        <Button onClick={handleOk} color=\"primary\">\n          Ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nconst DialogRoot = styled('div')(({ theme }) => ({\n  width: '100%',\n  maxWidth: 360,\n  backgroundColor: theme.palette.background.paper,\n  '& .paper': { width: '80%', maxHeight: 435 },\n}));\n\nexport default function ConfirmationDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('Dione');\n\n  function handleClickListItem() {\n    setOpen(true);\n  }\n\n  function handleClose(newValue) {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  }\n\n  return (\n    <DialogRoot>\n      <List component=\"div\" role=\"list\">\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText primary=\"Interruptions\" />\n        </ListItem>\n\n        <ListItem\n          button\n          divider\n          aria-controls=\"ringtone-menu\"\n          aria-label=\"Phone ringtone\"\n          onClick={handleClickListItem}\n          role=\"listitem\"\n        >\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\n        </ListItem>\n\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n        </ListItem>\n\n        <ConfirmationDialogRaw\n          keepMounted\n          open={open}\n          value={value}\n          className=\"paper\"\n          id=\"ringtone-menu\"\n          onClose={handleClose}\n        />\n      </List>\n    </DialogRoot>\n  );\n}\n","import CloseIcon from '@mui/icons-material/Close';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport MuiDialogActions from '@mui/material/DialogActions';\nimport MuiDialogContent from '@mui/material/DialogContent';\nimport MuiDialogTitle from '@mui/material/DialogTitle';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/system';\nimport { useState } from 'react';\n\nconst DialogTitleRoot = styled(MuiDialogTitle)(({ theme }) => ({\n  margin: 0,\n  padding: theme.spacing(2),\n  '& .closeButton': {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}));\n\nconst DialogTitle = (props) => {\n  const { children, onClose } = props;\n  return (\n    <DialogTitleRoot disableTypography>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"Close\" className=\"closeButton\" onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitleRoot>\n  );\n};\n\nconst DialogContent = styled(MuiDialogContent)(({ theme }) => ({\n  '&.root': { padding: theme.spacing(2) },\n}));\n\nconst DialogActions = styled(MuiDialogActions)(({ theme }) => ({\n  '&.root': { margin: 0, padding: theme.spacing(1) },\n}));\n\nconst CustomizedDialogs = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\n        Open dialog\n      </Button>\n\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Modal title\n        </DialogTitle>\n\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\n            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n          </Typography>\n\n          <Typography gutterBottom>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n            lacus vel augue laoreet rutrum faucibus dolor auctor.\n          </Typography>\n\n          <Typography gutterBottom>\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n            auctor fringilla.\n          </Typography>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Save changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default CustomizedDialogs;\n","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\nimport React from 'react';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AlertDialogSlide() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Slide in alert dialog\n      </Button>\n      <Dialog\n        open={open}\n        keepMounted\n        onClose={handleClose}\n        TransitionComponent={Transition}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">Use Google's location service?</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\">\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { Box } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport React from 'react';\n\nexport default function FormDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open form dialog\n      </Button>\n\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To subscribe to this website, please enter your email address here. We will send updates\n            occasionally.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"outlined\" color=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n","import CloseIcon from '@mui/icons-material/Close';\nimport { Box } from '@mui/material';\nimport AppBar from '@mui/material/AppBar';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Slide from '@mui/material/Slide';\nimport Toolbar from '@mui/material/Toolbar';\nimport { useTheme } from '@mui/system';\nimport { H6 } from 'app/components/Typography';\nimport React from 'react';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog() {\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open full-screen dialog\n      </Button>\n\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar sx={{ position: 'relative' }}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"Close\">\n              <CloseIcon />\n            </IconButton>\n            <H6 sx={{ flex: 1, marginLeft: theme.spacing(2) }}>Sound</H6>\n            <Button color=\"inherit\" onClick={handleClose}>\n              save\n            </Button>\n          </Toolbar>\n        </AppBar>\n\n        <List>\n          <ListItem button>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItem>\n\n          <Divider />\n\n          <ListItem button>\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\n          </ListItem>\n        </List>\n      </Dialog>\n    </Box>\n  );\n}\n","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport Switch from '@mui/material/Switch';\nimport { styled } from '@mui/system';\nimport React from 'react';\n\nconst DialogRoot = styled('div')(({ theme }) => ({\n  '& form': {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'column',\n    width: 'fit-content',\n  },\n  '& .formControl': {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  '& .formControlLabel': {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nexport default function MaxWidthDialog() {\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n  function handleMaxWidthChange(event) {\n    setMaxWidth(event.target.value);\n  }\n  function handleFullWidthChange(event) {\n    setFullWidth(event.target.checked);\n  }\n\n  return (\n    <DialogRoot>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open max-width dialog\n      </Button>\n\n      <Dialog\n        open={open}\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            You can set my maximum width and whether to adapt or not.\n          </DialogContentText>\n\n          <form noValidate>\n            <FormControl className=\"formControl\">\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n              <Select\n                value={maxWidth}\n                onChange={handleMaxWidthChange}\n                inputProps={{ name: 'max-width', id: 'max-width' }}\n              >\n                <MenuItem value={false}>false</MenuItem>\n                <MenuItem value=\"xs\">xs</MenuItem>\n                <MenuItem value=\"sm\">sm</MenuItem>\n                <MenuItem value=\"md\">md</MenuItem>\n                <MenuItem value=\"lg\">lg</MenuItem>\n                <MenuItem value=\"xl\">xl</MenuItem>\n              </Select>\n            </FormControl>\n\n            <FormControlLabel\n              className=\"formControlLabel\"\n              label=\"Full width\"\n              control={\n                <Switch checked={fullWidth} onChange={handleFullWidthChange} value=\"fullWidth\" />\n              }\n            />\n          </form>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </DialogRoot>\n  );\n}\n","import { Box } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/system';\nimport React from 'react';\n\nexport default function ResponsiveDialog() {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open responsive dialog\n      </Button>\n\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">Use Google's location service?</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n","import { Box } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useState } from 'react';\n\nexport default function AlertDialog() {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <Box>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Use Google's location service?</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n","import AddIcon from '@mui/icons-material/Add';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { Box } from '@mui/material';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport { blue } from '@mui/material/colors';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, ...other } = props;\n\n  function handleClose() {\n    onClose(selectedValue);\n  }\n  function handleListItemClick(value) {\n    onClose(value);\n  }\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <List>\n        {emails.map((email) => (\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\n            <ListItemAvatar>\n              <Avatar sx={{ backgroundColor: blue[100], color: blue[600] }}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={email} />\n          </ListItem>\n        ))}\n\n        <ListItem button onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"add account\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  selectedValue: PropTypes.string,\n};\n\nexport default function SimpleDialogDemo() {\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState('user02@gmail.com');\n\n  const handleClickOpen = () => setOpen(true);\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n      <br />\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n    </Box>\n  );\n}\n","import { Stack } from '@mui/material';\nimport { Box, styled } from '@mui/system';\nimport { Breadcrumb, SimpleCard } from 'app/components';\nimport ConfirmationDialog from './ConfirmationDialog';\nimport CustomizedDialogs from './CustomizedDialog';\nimport AlertDialogSlide from './DialogTransition';\nimport FormDialog from './FormDialog';\nimport FullScreenDialog from './FullScreenDialog';\nimport MaxWidthDialog from './OptimalSizeDialog';\nimport ResponsiveDialog from './ResponsiveDialog';\nimport AlertDialog from './SimpleAlerts';\nimport SimpleDialogDemo from './SimpleDialog';\n\nconst Container = styled('div')(({ theme }) => ({\n  margin: '30px',\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\n  '& .breadcrumb': {\n    marginBottom: '30px',\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\n  },\n}));\n\nconst AppDialog = () => {\n  return (\n    <Container>\n      <Box className=\"breadcrumb\">\n        <Breadcrumb routeSegments={[{ name: 'Material', path: '/material' }, { name: 'Dialog' }]} />\n      </Box>\n\n      <Stack spacing={3}>\n        <SimpleCard title=\"simple Dialog\">\n          <SimpleDialogDemo />\n        </SimpleCard>\n\n        <SimpleCard title=\"alert dialog\">\n          <AlertDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"transition\">\n          <AlertDialogSlide />\n        </SimpleCard>\n\n        <SimpleCard title=\"form dialog\">\n          <FormDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"customized dialog\">\n          <CustomizedDialogs />\n        </SimpleCard>\n\n        <SimpleCard title=\"full-screen dialog\">\n          <FullScreenDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"optimized size dialog\">\n          <MaxWidthDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"responsive dialog\">\n          <ResponsiveDialog />\n        </SimpleCard>\n\n        <SimpleCard title=\"confirmation dialog\">\n          <ConfirmationDialog />\n        </SimpleCard>\n      </Stack>\n    </Container>\n  );\n};\n\nexport default AppDialog;\n"],"sourceRoot":""}